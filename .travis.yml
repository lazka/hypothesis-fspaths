matrix:
  include:
    - os: linux
      dist: trusty
      language: python
      python: "2.7"
      env: TYPE="linux" PYVER="2.7" PYARGS="-R"
    - os: linux
      dist: trusty
      language: python
      python: "3.3"
      env: TYPE="linux" PYVER="3.3" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "3.4"
      env: TYPE="linux" PYVER="3.4" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "3.5"
      env: TYPE="linux" PYVER="3.5" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "3.6"
      env: TYPE="linux" PYVER="3.6" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "nightly"
      env: TYPE="linux" PYVER="nightly" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "pypy"
      env: TYPE="linux" PYVER="pypy" PYARGS="-R"
    - os: linux
      dist: trusty
      language: python
      python: "pypy3.3-5.2-alpha1"
      env: TYPE="linux" PYVER="pypy3" PYARGS="-R -bb"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="2.7.12" PYARGS="-R"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="3.3.5" PYARGS="-R -bb"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="3.4.4" PYARGS="-R -bb"
    - os: osx
      osx_image: xcode6.4
      language: generic
      env: TYPE="osx" PYVER="3" PYARGS="-R -bb"
    - os: osx
      osx_image: xcode6.4
      language: generic
      env: TYPE="osx" PYVER="2" PYARGS="-R"

install:
  - if [ "$TYPE" == "windows" ]; then sudo dpkg --add-architecture i386; fi
  - if [ "$TYPE" == "windows" ]; then sudo add-apt-repository -y ppa:ubuntu-wine/ppa; fi
  - if [ "$TYPE" == "windows" ]; then travis_retry sudo apt-get update -q; fi
  - if [ "$TYPE" == "windows" ]; then travis_retry sudo apt-get install --no-install-recommends -y wine1.8 xvfb; fi
  - if [ "$TYPE" == "osx" ]; then brew update; fi
  - if [ "$TYPE" == "osx" ] && [ "$PYVER" == "3" ]; then brew install python3; fi
  - if [ "$TYPE" == "osx" ] && [ "$PYVER" == "3" ]; then python3 -m pip install virtualenv; fi
  - if [ "$TYPE" == "osx" ] && [ "$PYVER" == "3" ]; then virtualenv venv -p python3; fi
  - if [ "$TYPE" == "osx" ] && [ "$PYVER" == "2" ]; then brew install python; fi
  - if [ "$TYPE" == "osx" ] && [ "$PYVER" == "2" ]; then python2 -m pip install virtualenv; fi
  - if [ "$TYPE" == "osx" ] && [ "$PYVER" == "2" ]; then virtualenv venv -p python2; fi
  - if [ "$TYPE" == "osx" ]; then source venv/bin/activate; fi
  - if [ "$TYPE" == "osx" ] || [ "$TYPE" == "linux" ]; then python -m pip install pytest hypothesis; fi

script:
  - if [ "$TYPE" == "linux" ]; then export LANG=C; export LC_ALL=C; fi
  - if [ "$TYPE" == "linux" ]; then python -c "import sys; print(sys.getfilesystemencoding())"; fi
  - if [ "$TYPE" == "linux" ]; then eval python $PYARGS -m pytest tests; fi
  - if [ "$TYPE" == "linux" ]; then export LANG=en_US.UTF-8; export LC_ALL=en_US.UTF-8; fi
  - if [ "$TYPE" == "linux" ]; then python -c "import sys; print(sys.getfilesystemencoding())"; fi
  - if [ "$TYPE" == "linux" ]; then eval python $PYARGS -m pytest tests; fi
  - if [ "$TYPE" == "windows" ]; then eval xvfb-run -a ./run_wine.sh "$PYVER" python $PYARGS -m pytest tests; fi
  - if [ "$TYPE" == "osx" ]; then eval python $PYARGS -m pytest tests; fi
